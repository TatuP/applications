/*--------------------------------*- C++ -*----------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  2.1.1                                 |
|   \\  /    A nd           | Web:      www.OpenFOAM.org                      |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0";
    object      p;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [1 -1 -2 0 0 0 0];

internalField   uniform 1e5;

boundaryField
{
    cooler
    {
//	type		fixedValue;
//	value		uniform 1.8e5;/*
	type		diffusedFixedFluxPressure;
	adjoint		false;
	U 		U;
	phi		phi;
	rho		rho; //*/
    }
    fuelAir
    {
//	type		fixedValue;
//	value		uniform 1.7e5; /*
	type		diffusedFixedFluxPressure;
	adjoint		false;
	U 		U;
	phi		phi;
	rho		rho;//*/
    }
    carrier
    {
//	type		fixedValue;
//	value		uniform 1.8e5;/*
	type		diffusedFixedFluxPressure;
	adjoint		false;
	U 		U;
	phi		phi;
	rho		rho;//*/
    }
    walls
    {
        type            zeroGradient;
    }
    midWalls
    {
        type            slip;
    }
    symmetric
    {
        type            symmetryPlane;
    }
    front
    {
        type            empty;
    }
    front
    {
        type            empty;
    }
    back
    {
        type            empty;
    }
    outlet
    {
        type waveTransmissive;
        value uniform 1e5; //important for correct I/O
        field p; //the name of the field that we are working on
        gamma 1.4; //the ratio of specific heats
        phi phi; //the name of the volumetric flux field ( or if you use the mass flux phi, it will be divided by rho)
        rho rho; //the name of the density field
        psi psi; //the name of the field that is the deriv. of density with respect to pressure
        lInf 0.05; //a measure of how far away the far-field condition should be
        fieldInf 1e5; //the far-field value to be applied to p
    }
    frontAndBack_pos
    {
        type            wedge;
    }
    frontAndBack_neg
    {
        type            wedge;
    }
    divOutlet
    {
	    type slip;
    }
    outsideInlet
    {
	    type slip;
    }
}


// ************************************************************************* //
